las=1,
)
barplot(Top$Number,
main = "Top 5 UAV Users and Turkey *",
xlab = "Counrty",
ylim = c(0,1200),
ylab = "Number of UAV`s",
names.arg = Top$Counrty,
#rgb(158,202,225),
#(30%, 10%, 0%, 12%)
col = rgb(0.3,0.1,0.0,0.12),
las=1,
)
barplot(Top$Number,
main = "Top 5 UAV Users and Turkey *",
xlab = "Counrty",
ylim = c(0,1200),
ylab = "Number of UAV`s",
names.arg = Top$Counrty,
#rgb(158,202,225),
col = "#9ecae1",
las=1,
)
ggplot(data=df, aes(x=dose, y=len)) +
geom_bar(stat="identity", fill="steelblue")+
geom_text(aes(label=len), vjust=1.6, color="white", size=3.5)+
theme_minimal()
ggplot(data=Top, aes(x=Number, y=Counrty)) +
geom_bar(stat="identity", fill="steelblue")+
geom_text(aes(label=len), vjust=1.6, color="white", size=3.5)+
theme_minimal()
library(ggplot)
library(ggplot2)
library(ggplot2)
ggplot(data=Top, aes(x=Number, y=Counrty)) +
geom_bar(stat="identity", fill="steelblue")+
geom_text(aes(label=len), vjust=1.6, color="white", size=3.5)+
theme_minimal()
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
ggplot(data=Top, aes(x=Number, y=Counrty)) +
geom_bar(stat="identity", fill="steelblue")+
geom_text(aes(label=len), vjust=1.6, color="white", size=3.5)+
theme_minimal()
barplot(Top$Number,
main = "Top 5 UAV Users and Turkey *",
xlab = "Counrty",
ylim = c(0,1200),
ylab = "Number of UAV`s",
names.arg = Top$Counrty,
#rgb(158,202,225),
col = "#9ecae1",
las=2,
)
barplot(Top$Number,
main = "Top 5 UAV Users and Turkey *",
xlab = "Counrty",
ylim = c(0,1200),
ylab = "Number of UAV`s",
names.arg = Top$Counrty,
#rgb(158,202,225),
col = "#9ecae1",
las=1,
)
text(x=Top$Counrty[1], y=Top$Number[1], names(DD), cex=0.8, srt=45, xpd=TRUE)
text(x=Top$Counrty[1], y=Top$Number[1], names(Top$Number[1]), cex=0.8, srt=45, xpd=TRUE)
text(x=Top$Counrty[1], y=Top$Number[1], Top$Number[1], cex=0.8, srt=45, xpd=TRUE)
text(x=Top$Counrty[1], y=Top$Number[1], Top$Number[1],adj = -.3,cex=.9)
text(x=Top$Counrty[1], y=Top$Number[1], Top$Number[1],adj = -.3,cex=.9)
text(x=Top$Counrty[1], y=Top$Number[1], "Top$Number[1]")
text(x=Top$Counrty[1], y=Top$Number[1], "Top$Number[1]")
barplot(Top$Number,
main = "Top 5 UAV Users and Turkey *",
xlab = "Counrty",
ylim = c(0,1200),
ylab = "Number of UAV`s",
names.arg = Top$Counrty,
#rgb(158,202,225),
col = "#9ecae1",
las=1,
)
text(x=Top$Counrty[1], y=Top$Number[1], Top$Number[1]"")
text(x=Top$Counrty[1], y=Top$Number[1], Top$Number[1])
barplot(Top$Number,
main = "Top 5 UAV Users and Turkey *",
xlab = "Counrty",
ylim = c(0,1200),
ylab = "Number of UAV`s",
names.arg = Top$Counrty,
#rgb(158,202,225),
col = "#9ecae1",
las=1,
)
text(x=Top$Counrty[1], y=Top$Number[1], Top$Number[1])
ggplot(data=Top, aes(x=Number, y=Counrty)) +
geom_bar(stat="identity", fill="steelblue")+
geom_text(aes(label=len), vjust=1.6, color="white", size=3.5)+
theme_minimal()
df <- data.frame(dose=Top$Counrty,
len=Top$Number)
ggplot(data=df, aes(x=dose, y=len)) +
geom_bar(stat="identity", fill="steelblue")+
geom_text(aes(label=len), vjust=1.6, color="white", size=3.5)+
theme_minimal()
plot_ly(Top, x = ~Counrty, y = ~Number, type = 'bar',
text = Top$Number, textposition = 'auto',
marker = list(color = c('rgb(158,202,225)','rgb(158,202,225)','rgb(158,202,225)','rgb(158,202,225)','rgb(158,202,225)',
'rgb(255,0,0)'),
line = list(color = 'rgb(8,48,107)', width = 1.5))) %>%
layout(title = "Top 5 UAV Users and Turkey *",
xaxis = xform,
yaxis = list(title = "Number of UAV`s"))
plot_ly(test2019) %>%
add_trace(x = test2019$`Country Name`, y = test2019$`2019`, type = 'bar', name = 'Wind',
marker = list(color = '#C9EFF9'),
hoverinfo = "text",
text = ~paste(test2019$`2019`, ' mph')) %>%
add_trace(x = test2019$`Country Name`, y =test2019$NUmber , type = 'scatter', mode = 'lines', name = 'Number', yaxis = 'y2',
line = list(color = '#45171D'),
hoverinfo = "text",
text = ~paste(y =test2019$NUmber, '°F')) %>%
layout(title = 'New York Wind and Temperature Measurements for September 1973',
xaxis = list(title = ""),
yaxis = list(side = 'left', title = 'Wind in mph', showgrid = FALSE, zeroline = FALSE),
yaxis2 = list(side = 'right', overlaying = "y", title = 'Temperature in degrees F', showgrid = FALSE, zeroline = FALSE))
plot_ly(test2019) %>%
add_trace(x = test2019$`Country Name`, y =test2019$NUmber , type = 'bar', name = 'Wind',
marker = list(color = '#C9EFF9'),
hoverinfo = "text",
text = ~paste(test2019$NUmber, ' mph')) %>%
add_trace(x = test2019$`Country Name`, y =test2019$`2019`, type = 'scatter', mode = 'lines', name = 'Number', yaxis = 'y2',
line = list(color = '#45171D'),
hoverinfo = "text",
text = ~paste(y =test2019$`2019`, '°F')) %>%
layout(title = 'New York Wind and Temperature Measurements for September 1973',
xaxis = list(title = ""),
yaxis = list(side = 'left', title = 'Wind in mph', showgrid = FALSE, zeroline = FALSE),
yaxis2 = list(side = 'right', overlaying = "y", title = 'Temperature in degrees F', showgrid = FALSE, zeroline = FALSE))
airquality_sept <- airquality[which(airquality$Month == 9),]
airquality_sept$Date <- as.Date(paste(airquality_sept$Month, airquality_sept$Day, 1973, sep = "."), format = "%m.%d.%Y")
plot_ly(airquality_sept) %>%
add_trace(x = ~Date, y = ~Wind, type = 'bar', name = 'Wind',
marker = list(color = '#C9EFF9'),
hoverinfo = "text",
text = ~paste(Wind, ' mph')) %>%
add_trace(x = ~Date, y = ~Temp, type = 'scatter', mode = 'lines', name = 'Temperature', yaxis = 'y2',
line = list(color = '#45171D'),
hoverinfo = "text",
text = ~paste(Temp, '°F')) %>%
layout(title = 'New York Wind and Temperature Measurements for September 1973',
xaxis = list(title = ""),
yaxis = list(side = 'left', title = 'Wind in mph', showgrid = FALSE, zeroline = FALSE),
yaxis2 = list(side = 'right', overlaying = "y", title = 'Temperature in degrees F', showgrid = FALSE, zeroline = FALSE))
# set up the plot***************************************************************************************************************
plot(xrange, yrange, type="n", xlab="Years",
ylab="Numbers" )
lines(x = TR_Yearly_UAV$Year,y =TR_Yearly_UAV$Number,type="b", col="red", lwd=2, pch=19 )
title("Turkey's Yearly UAV Production Graph")
TR_Yearly_UAVREV<- TR_Yearly_UAV[seq(dim(TR_Yearly_UAV)[1],1),]
TR_Yearly_UAV_FutureREV<- TR_Yearly_UAV_Future[seq(dim(TR_Yearly_UAV_Future)[1],1),]
X <-barplot(TR_Yearly_UAV_FutureREV$Number,
main = " Future of Turkey's Yearly UAV Production",
xlab = "Years",
ylim = c(0,70),
ylab = "Numbers",
names.arg = TR_Yearly_UAV_FutureREV$Year,
col = "darkred",
las=2,
density=c(1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,20) , angle=c(0,0,0,0,0,0,0,0,0,0,0,0,0,50)
)
# *********************************************************************************************************************************************** USE THIS
plot_ly(TR_Yearly_UAV_FutureREV, x = ~Year, y = ~Number, type = 'bar',
text = TR_Yearly_UAV_FutureREV$Number, textposition = 'auto',
marker = list(color = c('rgb(158,202,225)','rgb(158,202,225)','rgb(158,202,225)','rgb(158,202,225)','rgb(158,202,225)','rgb(158,202,225)','rgb(158,202,225)',
'rgb(158,202,225)','rgb(158,202,225)','rgb(158,202,225)','rgb(158,202,225)','rgb(158,202,225)','rgb(158,202,225)','rgb(255,0,0)'),
line = list(color = 'rgb(8,48,107)', width = 1.5))) %>%
layout(title = "Future of Turkey's Yearly UAV Production",
xaxis = list(title = "Years"),
yaxis = list(title = "Number of UAV Production"))
# *********************************************************************************************************************************************** USE THIS
plot_ly(TR_Yearly_UAVREV, x = ~Year, y = ~Number, type = 'bar',
text = TR_Yearly_UAVREV$Number, textposition = 'auto',
marker = list(color = 'rgb(158,202,225)',
line = list(color = 'rgb(8,48,107)', width = 1.5))) %>%
layout(title = "Turkey's Yearly UAV Production",
xaxis = list(title = "Year"),
yaxis = list(title = "Number of Produced UAV"))
barplot(TRMonth$sumMonth,
main = "Turkey's Monthly UAV Production (2014-2019)",
xlab = "Years",
ylim = c(0,40),
ylab = "Numbers",
names.arg = TRMonth$Month,
col = "darkred",
las=2,
)
#FIX
# *********************************************************************************************************************************************** USE THIS
plot_ly(TRMonth, x = TRMonth$Month, y = ~sumMonth, type = 'bar',
text = TRMonth$sumMonth, textposition = 'auto',
marker = list(color = 'rgb(158,202,225)',
line = list(color = 'rgb(8,48,107)', width = 1.5))) %>%
layout(title = "Turkey's Monthly UAV Production (2014-2019)",
xaxis = xform,
yaxis = list(title = "Number of Produced UAV"))
# *********************************************************************************************************************************************** USE THIS
plot_ly(TRLineTOTAL, x = ~Year, y = ~Number, type = 'bar',
text = TRLineTOTAL$Number, textposition = 'auto',
marker = list(color = 'rgb(158,202,225)',
line = list(color = 'rgb(8,48,107)', width = 1.5))) %>%
layout(title = "Turkey's Total Number of UAVs (2007-2019)",
xaxis = list(title = "Year"),
yaxis = list(title = "Number of UAV"))
# *********************************************************************************************************************************************** USE THIS
plot_ly(TRLineTOTAL, x = ~Year, y = ~Number, type = 'bar',
text = TRLineTOTAL$Number, textposition = 'auto',
marker = list(color = 'rgb(158,202,225)',
line = list(color = 'rgb(8,48,107)', width = 1.5))) %>%
layout(title = "Turkey's Total Number of UAVs (2007-2019)",
xaxis = list(title = "Year"),
yaxis = list(title = "Number of UAV"))
# *********************************************************************************************************************************************** USE THIS
plot(UKLine,type = "b",col = "red",lwd=2, xlab = "Year", ylab = "Number of UAV's", main = "Total Number of UAV by Country",ylim=c(0,800)  )
lines(TRLine, type = "b", col = "blue",lwd=2)
lines(ISLine, type = "b", col = "black",lwd=2)
lines(EGLine, type = "b", col = "green",lwd=2)
lines(GRLine, type = "o", col = "orange",lwd=2)
lines(IRLine, type = "b", col = "pink",lwd=2)
lines(UARLine, type = "o", col = "grey",lwd=2)
mtext("MENA Countries",side = 3)
grid()
legend(2015,850, legend=c("United Kingdom", "Turkey","Isreal","Egypt","Greece","Iran","UAE"),
col=c("red", "blue","black","green","orange","pink","grey"),
pch=(1),
lty=1, xpd=F, horiz=F, bty="n",cex = 0.9,xjust = .2,yjust = 1.2)
# *********************************************************************************************************************************************** USE THIS
plot(UKLine,type = "o",col = "red",lwd=2, xlab = "Year", ylab = "Number of UAV's", main = "Total Number of UAV by Country",ylim=c(0,400)  )
lines(TRLine, type = "o", col = "blue",lwd=2)
lines(ISLine, type = "o", col = "black",lwd=2)
lines(EGLine, type = "o", col = "green",lwd=2)
lines(GRLine, type = "o", col = "orange",lwd=2)
lines(UARLine, type = "o", col = "grey",lwd=2)
mtext("MENA Countries Excluding Iran",side = 3)
grid()
legend(2015,400, legend=c("United Kingdom", "Turkey","Isreal","Egypt","Greece","UAE"),
col=c("red", "blue","black","green","orange","grey"),
pch=(1),
lty=1, xpd=F, horiz=F, bty="n",cex = 0.9,xjust = .2,yjust = 1)
slices <- c(TRLine[1,2],UKLine[1,2],GRLine[1,2],ISLine[1,2],EGLine[1,2],UARLine[1,2],IRLine[1,2])
#*********************************************************************************************************************************************** USE THIS
# Create test data.
data <- data.frame(
category=lbls,
count=slices
)
p <- data %>%
group_by(category) %>%
plot_ly(labels = ~category, values = ~count) %>%
add_pie(hole = 0.6) %>%
layout(title = "Total Numer of UAV`s by Country (2019)",  showlegend = T,
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
p
# Make the plot
ggplot(data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=category)) +
geom_rect() +
geom_label( x=3.5, aes(y=labelPosition, label=label), size=6) +
scale_fill_brewer(palette=6) +
coord_polar(theta="y") +
xlim(c(2, 4)) +
theme_void() +
theme(legend.position = "left")
# Compute percentages
data$fraction <- data$count / sum(data$count)
# Compute the cumulative percentages (top of each rectangle)
data$ymax <- cumsum(data$fraction)
# Compute the bottom of each rectangle
data$ymin <- c(0, head(data$ymax, n=-1))
# Compute label position
data$labelPosition <- (data$ymax + data$ymin) / 2
# Compute a good label
data$label <- paste0(data$category, "\n value: ", data$count)
# Make the plot
ggplot(data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=category)) +
geom_rect() +
geom_label( x=3.5, aes(y=labelPosition, label=label), size=6) +
scale_fill_brewer(palette=6) +
coord_polar(theta="y") +
xlim(c(2, 4)) +
theme_void() +
theme(legend.position = "left")
SpendingUSD2 <- read_excel("C:/Users/leven/Desktop/RecentHomework/365/365Project/Excel File/2005-20018 Milisary spending USD-V3.xlsx",sheet = "This")
# Make the plot
ggplot(data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=category)) +
geom_rect() +
geom_label( x=3.5, aes(y=labelPosition, label=label), size=6) +
scale_fill_brewer(palette=1) +
coord_polar(theta="y") +
xlim(c(2, 4)) +
theme_void() +
theme(legend.position = "left")
# Make the plot
ggplot(data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=category)) +
geom_rect() +
geom_label( x=3.5, aes(y=labelPosition, label=label), size=4) +
scale_fill_brewer(palette=1) +
coord_polar(theta="y") +
xlim(c(2, 4)) +
theme_void() +
theme(legend.position = "left")
# Make the plot
ggplot(data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=category)) +
geom_rect() +
geom_label( x=3.5, aes(y=labelPosition, label=label), size=1) +
scale_fill_brewer(palette=1) +
coord_polar(theta="y") +
xlim(c(2, 4)) +
theme_void() +
theme(legend.position = "left")
# Make the plot
ggplot(data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=category)) +
geom_rect() +
geom_label( x=3.5, aes(y=labelPosition, label=label), size=3) +
scale_fill_brewer(palette=1) +
coord_polar(theta="y") +
xlim(c(2, 4)) +
theme_void() +
theme(legend.position = "left")
# Make the plot
ggplot(data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=category)) +
geom_rect() +
geom_label( x=2, aes(y=labelPosition, label=label), size=3) +
scale_fill_brewer(palette=1) +
coord_polar(theta="y") +
xlim(c(2, 4)) +
theme_void() +
theme(legend.position = "left")
# Make the plot
ggplot(data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=category)) +
geom_rect() +
geom_label( x=4, aes(y=labelPosition, label=label), size=3) +
scale_fill_brewer(palette=1) +
coord_polar(theta="y") +
xlim(c(2, 4)) +
theme_void() +
theme(legend.position = "left")
# Make the plot
ggplot(data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=category)) +
geom_rect() +
geom_label( x=5, aes(y=labelPosition, label=label), size=3) +
scale_fill_brewer(palette=1) +
coord_polar(theta="y") +
xlim(c(2, 4)) +
theme_void() +
theme(legend.position = "left")
# Make the plot
ggplot(data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=category)) +
geom_rect() +
geom_label( x=4.5, aes(y=labelPosition, label=label), size=3) +
scale_fill_brewer(palette=1) +
coord_polar(theta="y") +
xlim(c(2, 4)) +
theme_void() +
theme(legend.position = "left")
# Make the plot
ggplot(data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=category)) +
geom_rect() +
geom_label( x=4.51, aes(y=labelPosition, label=label), size=3) +
scale_fill_brewer(palette=1) +
coord_polar(theta="y") +
xlim(c(2, 4)) +
theme_void() +
theme(legend.position = "left")
# Make the plot
ggplot(data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=category)) +
geom_rect() +
geom_label( x=4.2, aes(y=labelPosition, label=label), size=3) +
scale_fill_brewer(palette=1) +
coord_polar(theta="y") +
xlim(c(2, 4)) +
theme_void() +
theme(legend.position = "left")
# Make the plot
ggplot(data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=category)) +
geom_rect() +
geom_label( x=4.2, aes(y=labelPosition, label=label), size=3) +
scale_fill_brewer(palette=4) +
coord_polar(theta="y") +
xlim(c(2, 4)) +
theme_void() +
theme(legend.position = "left")
# Make the plot
ggplot(data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=category)) +
geom_rect() +
geom_label( x=4.2, aes(y=labelPosition, label=label), size=3) +
scale_fill_brewer(palette=4) +
coord_polar(theta="y") +
xlim(c(2, 4)) +
theme_void() +
theme(legend.position = "None")
p <- data %>%
group_by(category) %>%
plot_ly(labels = ~category, values = ~count) %>%
add_pie(hole = 0.6) %>%
layout(title = "Total Numer of UAV`s by Country (2019)",  showlegend = T,
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
p
# Make the plot
ggplot(data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=category)) +
geom_rect() +
geom_label( x=4.2, aes(y=labelPosition, label=label), size=3) +
scale_fill_brewer(palette=4) +
coord_polar(theta="y") +
xlim(c(2, 4)) +
theme_void() +
theme(legend.position = "None")
# Make the plot
ggplot(data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=category)) +
geom_rect() +
geom_label( x=4.2, aes(y=labelPosition, label=label), size=3) +
scale_fill_brewer(palette=4) +
coord_polar(theta="x") +
xlim(c(2, 4)) +
theme_void() +
theme(legend.position = "None")
# Make the plot
ggplot(data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=category)) +
geom_rect() +
geom_label( x=4.2, aes(y=labelPosition, label=label), size=3) +
scale_fill_brewer(palette=4) +
coord_polar(theta="y") +
xlim(c(2, 4)) +
theme_void() +
theme(legend.position = "None")
# Make the plot
ggplot(data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=category)) +
geom_rect() +
geom_label( x=4.2, aes(y=labelPosition, label=label), size=4) +
scale_fill_brewer(palette=4) +
coord_polar(theta="y") +
xlim(c(2, 4)) +
theme_void() +
theme(legend.position = "None")
# Make the plot
ggplot(data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=category)) +
geom_rect() +
geom_label( x=4.3, aes(y=labelPosition, label=label), size=4) +
scale_fill_brewer(palette=4) +
coord_polar(theta="y") +
xlim(c(2, 4)) +
theme_void() +
theme(legend.position = "None")
# Make the plot
ggplot(data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=category)) +
geom_rect() +
geom_label( x=4.3, aes(y=labelPosition, label=label), size=4) +
scale_fill_brewer(palette=6) +
coord_polar(theta="y") +
xlim(c(2, 4)) +
theme_void() +
theme(legend.position = "None")
# Make the plot
ggplot(data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=category)) +
geom_rect() +
geom_label( x=4.3, aes(y=labelPosition, label=label), size=4) +
scale_fill_brewer(palette=7) +
coord_polar(theta="y") +
xlim(c(2, 4)) +
theme_void() +
theme(legend.position = "None")
# Make the plot
ggplot(data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=category)) +
geom_rect() +
geom_label( x=4.3, aes(y=labelPosition, label=label), size=4) +
scale_fill_brewer(palette=2) +
coord_polar(theta="y") +
xlim(c(2, 4)) +
theme_void() +
theme(legend.position = "None")
# Make the plot
ggplot(data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=category)) +
geom_rect() +
geom_label( x=4.3, aes(y=labelPosition, label=label), size=4) +
scale_fill_brewer(palette=3) +
coord_polar(theta="y") +
xlim(c(2, 4)) +
theme_void() +
theme(legend.position = "None")
#*********************************************************************************************************************************************** USE THIS
plot(tail(SpendingUK),type = "o",lwd=2,col = "red", xlab = "Year", ylab = "Billion USD", main = "Defence Budget 2014-2019",ylim=c(0,70), )
lines(tail(SpendingTR), type = "o", col = "blue",lwd=2)
lines(tail(SpendingIS), type = "o", col = "black",lwd=2)
lines(tail(SpendingEG), type = "o", col = "green",lwd=2)
lines(tail(SpendingGR), type = "o", col = "orange",lwd=2)
lines(tail(SpendingIR), type = "o", col = "pink",lwd=2)
lines(tail(SpendingUAE), type = "o", col = "grey",lwd=2)
grid()
mtext("MENA Countries",side = 3)
legend("top",pch=1,x.intersp = -0.3,
c("United Kingdom", "Turkey","Isreal","Egypt","Greece","UAE","Iran"),
col=c("red", "blue","black","green","orange","grey","pink"),
lty=1, xpd=TRUE, horiz=TRUE, bty="n",cex = 0.9,xjust = .2,yjust = 1,inset = c(0,0))
plot_ly(Top, x = ~Counrty, y = ~Number, type = 'bar',
text = Top$Number, textposition = 'auto',
marker = list(color = c('rgb(158,202,225)','rgb(158,202,225)','rgb(158,202,225)','rgb(158,202,225)','rgb(158,202,225)',
'rgb(255,0,0)'),
line = list(color = 'rgb(8,48,107)', width = 1.5))) %>%
layout(title = "Top 5 UAV Users and Turkey *",
xaxis = xform,
yaxis = list(title = "Number of UAV`s"))
